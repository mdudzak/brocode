/**
 * This file contains all dependencies including gradle plugins
 **/
def versions = [:]
versions.androidGradlePlugin    = '3.3.0-rc02'
versions.android_arch_testing   = '2.0.0-alpha1'
versions.androidx               = '1.0.0'
versions.androidx_test          = '1.1.0'
versions.constraint_layout      = '2.0.0-alpha2'
versions.dagger                 = '2.19'
versions.espresso               = '3.1.0'
versions.gson                   = '2.8.5'
versions.junit                  = '4.12'
versions.junit_platform_runner  = '1.0.0'
versions.kotlin                 = '1.3.11'
versions.leak_canary            = '1.5.4'
versions.lifecycle              = '2.0.0'
versions.mockito                = '2.23.4'
versions.navigation             = '1.0.0-alpha09'
versions.okhttp3                = '3.12.0'
versions.retrofit               = '2.5.0'
versions.room                   = '2.1.0-alpha02'
versions.rx_android             = '2.1.0'
versions.rx_kotlin              = '2.3.0'
versions.rx_bindings            = '3.0.0-alpha2'
versions.stetho                 = '1.5.0'
versions.test_runner            = '1.0.0'
ext.versions = versions

// Android Gradle plugin
ext.androidGradlePlugin = "com.android.tools.build:gradle:$versions.androidGradlePlugin"

def kotlin = [:]
kotlin.stdlib               = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.gradlePlugin         = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.coroutines           = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutines"
kotlin.coroutines_android   = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines"
ext.kotlinx = kotlin

def androidx = [:]
androidx.appcompat              = "androidx.appcompat:appcompat:$versions.androidx"
androidx.constraint_layout      = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
androidx.core                   = "androidx.core:core-ktx:$versions.androidx"
androidx.lifecycle_compiler     = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
androidx.lifecycle_extensions   = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
androidx.material_design        = "com.google.android.material:material:$versions.androidx"
ext.androidx = androidx

def dagger = [:]
dagger.runtime          = "com.google.dagger:dagger:$versions.dagger"
dagger.compiler         = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android          = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support  = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.android_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
ext.dagger = dagger

def google = [:]
google.gson                 = "com.google.code.gson:gson:$versions.gson"
ext.google = google

def retrofit = [:]
retrofit.runtime            = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.converter_gson     = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.adapter_rxjava2    = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
ext.retrofit = retrofit

def okhttp3 = [:]
okhttp3.runtime                 = "com.squareup.okhttp3:okhttp:$versions.okhttp3"
okhttp3.logging_interceptor     = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3"
ext.okhttp3 = okhttp3

def navigation = [:]
navigation.ui           = "android.arch.navigation:navigation-ui-ktx:$versions.navigation"
navigation.fragment     = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.gradlePlugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
ext.navigation = navigation

def room = [:]
room.runtime    = "androidx.room:room-runtime:$versions.room"
room.compiler   = "androidx.room:room-compiler:$versions.room"
room.rxjava2    = "androidx.room:room-rxjava2:$versions.room"
room.testing    = "androidx.room:room-testing:$versions.room"
ext.room = room

def rx = [:]
rx.kotlin               = "io.reactivex.rxjava2:rxkotlin:$versions.rx_kotlin"
rx.android              = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
rx.bindings             = "com.jakewharton.rxbinding3:rxbinding:$versions.rx_bindings"
rx.bindings_appcompat   = "com.jakewharton.rxbinding3:rxbinding-appcompat:$versions.rx_bindings"
ext.rx = rx

def test = [:]
test.junit                      = "junit:junit:$versions.junit"
test.androidx_core              = "androidx.test:core:$versions.androidx"
test.androidx_arch_core_testing = "androidx.arch.core:core-testing:$versions.android_arch_testing"
test.androidx_arch_core_testing_exclude = {
    exclude group: 'com.android.support', module: 'support-compat'
    exclude group: 'com.android.support', module: 'support-annotations'
    exclude group: 'com.android.support', module: 'support-core-utils'
}
test.mockito                    = "org.mockito:mockito-core:$versions.mockito"
test.mockito_android            = "org.mockito:mockito-android:$versions.mockito"
test.junit_platform_runner      = "org.junit.platform:junit-platform-runner:$versions.junit_platform_runner"
test.runner                     = "androidx.test.ext:junit:$versions.test_runner"
test.espresso                   = "androidx.test.espresso:espresso-core:$versions.espresso"
ext.test = test

def stetho = [:]
stetho.runtime = "com.facebook.stetho:stetho:$versions.stetho"
stetho.okhttp3 = "com.facebook.stetho:stetho-okhttp3:$versions.stetho"
ext.stetho = stetho

ext.leakcanary = "com.squareup.leakcanary:leakcanary-android:$versions.leak_canary"